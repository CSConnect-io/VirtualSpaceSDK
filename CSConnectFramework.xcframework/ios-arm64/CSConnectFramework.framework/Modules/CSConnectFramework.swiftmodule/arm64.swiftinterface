// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name CSConnectFramework
import ARKit
@_exported import CSConnectFramework
import Combine
import CoreData
import Foundation
import RealityKit
import Swift
import UIKit
import _Concurrency
@_inheritsConvenienceInitializers @objc(CoreMedia) public class CoreMedia : CoreData.NSManagedObject {
  @objc override dynamic public init(entity: CoreData.NSEntityDescription, insertInto context: CoreData.NSManagedObjectContext?)
  @objc deinit
}
extension CSConnectFramework.CoreMedia {
  @nonobjc public class func fetchRequest() -> CoreData.NSFetchRequest<CSConnectFramework.CoreMedia>
  @objc @NSManaged dynamic public var data: Foundation.Data? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var url: Swift.String? {
    @objc get
    @objc set
  }
}
extension CSConnectFramework.CoreMedia : Swift.Identifiable {
  public typealias ID = Swift.ObjectIdentifier
}
@_hasMissingDesignatedInitializers public class FurnitureSDK {
  @objc deinit
}
extension CSConnectFramework.CoreFurniture {
  @nonobjc public class func fetchRequest() -> CoreData.NSFetchRequest<CSConnectFramework.CoreFurniture>
  @objc @NSManaged dynamic public var category: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var id: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var imgUrl: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var name: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var serialNumber: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var subcategory: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var usdzUrl: Swift.String? {
    @objc get
    @objc set
  }
}
extension CSConnectFramework.CoreFurniture : Swift.Identifiable {
  public typealias ID = Swift.String?
}
@_inheritsConvenienceInitializers @objc(CoreFurniture) public class CoreFurniture : CoreData.NSManagedObject {
  @objc override dynamic public init(entity: CoreData.NSEntityDescription, insertInto context: CoreData.NSManagedObjectContext?)
  @objc deinit
}
extension UIKit.UINavigationController {
  @_Concurrency.MainActor(unsafe) public func openVirtualSpaceViewController()
}
extension Swift.Array where Element : Swift.Hashable {
  public func uniqued() -> [Element]
}
